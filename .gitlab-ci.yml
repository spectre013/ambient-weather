stages:
  - scan
  - build docker

#lint server:
#  stage: lint
#  script:
#    - export PATH=$PATH:/usr/local/go/bin
#    - cd weather-server
#    - staticcheck ./...

scan server:
  stage: scan
  script:
    - |
      export PATH=$PATH:/usr/local/go/bin
      echo "Running Truffle Hog"
      output="$(trufflehog -j filesystem weather-server | jq -C .)"
  
      if [ "${output}" != "" ]; then
        echo "${output}"
        exit 1
      else
        echo "No issues found"
        exit 0
      fi

scan transfer:
  stage: scan
  script:
    - |
      export PATH=$PATH:/usr/local/go/bin
      echo "Running Truffle Hog"
      output="$(trufflehog -j filesystem weather-transfer | jq -C .)"
      
      if [ "${output}" != "" ]; then
        echo "${output}"
        exit 1
      else
        echo "No issues found"
        exit 0
      fi

server:
  stage: build docker
  script:
    - cd weather-server
    - docker build -t $DOCKER_REGISTRY/production/weather-server:2.1.3 . --no-cache
    - docker push $DOCKER_REGISTRY/production/weather-server:2.1.3

transfer:
  stage: build docker
  script:
    - cd weather-transfer
    - docker build -t $DOCKER_REGISTRY/production/weather-transfer:2.1 . --no-cache
    - docker push $DOCKER_REGISTRY/production/weather-transfer:2.1



#server deploy:
#  stage: deploy
#  when: manual
#  script:
#    - ssh brian@10.10.1.122 /var/www/vhosts/apps/weather/start-server.sh


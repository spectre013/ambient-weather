stages:
  - build
  - lint
  - scan
  - build docker
  - deploy

cache:
  untracked: true
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - node_modules/

build ui:
  stage: build
  script:
    - cd weather-ui
    - npm install

lint server:
  stage: lint
  script:
    - export PATH=$PATH:/usr/local/go/bin
    - cd weather-server
    - staticcheck ./...

lint ui:
  stage: lint
  script:
    - cd weather-ui
    - npm run lint

scan server:
  stage: scan
  script:
    - |
      export PATH=$PATH:/usr/local/go/bin
      echo "Running Truffle Hog"
      output="$(trufflehog -j filesystem weather-server | jq -C .)"
  
      if [ "${output}" != "" ]; then
        echo "${output}"
        exit 1
      else
        echo "No issues found"
        exit 0
      fi

ui:
  stage: build docker
  script:
    - cd weather-ui
    - docker build -t $DOCKER_REGISTRY/production/weather-ui:2.0 . --no-cache
    - docker push $DOCKER_REGISTRY/production/weather-ui:2.0

server:
  stage: build docker
  script:
    - cd weather-server
    - docker build -t $DOCKER_REGISTRY/production/weather-server:2.0 . --no-cache
    - docker push $DOCKER_REGISTRY/production/weather-server:2.0

ui deploy:
  stage: deploy
  when: manual
  script:
    - ssh brian@10.10.1.122 /var/www/vhosts/apps/weather/start-ui.sh

server deploy:
  stage: deploy
  when: manual
  script:
    - ssh brian@10.10.1.122 /var/www/vhosts/apps/weather/start-server.sh

